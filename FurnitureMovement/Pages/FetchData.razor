@page "/fetchdata"
@using FurnitureMovement.Data
@using FurnitureMovement.Services
@using Blazorise
@using Blazorise.DataGrid
@using Blazorise.Icons.FontAwesome
@inject IJSRuntime JSRuntime
@inject IOrderService OrderService

<PageTitle>Отчеты</PageTitle>

<h3>Тестовый DataGrid</h3>

<Button Color="Color.Primary" @onclick="ShowModal">Test Blazorise Modal</Button>

<DataGrid TItem="Order"
              Data="@orders"
              ShowPager="true">
        <DataGridColumns>
            <DataGridColumn TItem="Order" Field="@nameof(Order.ID)" Caption="ID" />
            <DataGridColumn TItem="Order" Field="@nameof(Order.OrderNumber)" Caption="Номер" />
            <DataGridColumn TItem="Order" Field="@nameof(Order.OrderName)" Caption="Наименование" />
            <DataGridColumn TItem="Order" Caption="Количество">
                <DisplayTemplate Context="order">
                    @(order.Orders?.FirstOrDefault()?.OrderQuantity.ToString() ?? "0")
                </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="Order" Caption="Статус">
                <DisplayTemplate Context="order">
                    @(order.Orders?.FirstOrDefault()?.OrderStatus.ToString() ?? "0")
                </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="Order" Caption="Дата">
                <DisplayTemplate Context="order">
                    @(order.Orders?.FirstOrDefault()?.AdmissionDate.ToString("dd/MM/yyyy") ?? "")
                </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="Order" Caption="Автор">
                <DisplayTemplate Context="order">
                    @(order.Orders?.FirstOrDefault()?.OrderAuthor ?? "")
                </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="Order" Caption="Действия" Sortable="false">
                <DisplayTemplate Context="orderItem">
                    <Button Color="Color.Primary" Size="Size.Small" @onclick="() => EditItem(orderItem)">
                        ✏️
                    </Button>
                    <Button Color="Color.Danger" Size="Size.Small" class="ml-3" @onclick="() => DeleteItem(orderItem)">
                        🗑️
                    </Button>
                </DisplayTemplate>
            </DataGridColumn>
        </DataGridColumns>
</DataGrid>

<Modal @ref="modalRef">
    <ModalContent>
        <ModalHeader>
            <ModalTitle>Test Modal</ModalTitle>
            <CloseButton @onclick="HideModal" />
        </ModalHeader>
        <ModalBody>
            <p>If you see this, Blazorise works!</p>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" @onclick="HideModal">Close</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    private Modal modalRef = new Modal();   
    private List<Order> orders = new();

    public class TestItem
    {
        public int Id { get; set; }
        public string? Name { get; set; }
        public int Quantity { get; set; }
        public DateTime CreatedDate { get; set; }
    }

    protected override void OnInitialized()
    {
        // testData = Enumerable.Range(1, 20).Select(i => new TestItem
        // {
        //     Id = i,
        //     Name = $"Товар {i}",
        //     Quantity = Random.Shared.Next(1, 100),
        //     CreatedDate = DateTime.Now.AddDays(-Random.Shared.Next(1, 30))
        // }).ToList();
    }

    private void ShowModal()
    {
        modalRef?.Show();
    }

    private void HideModal()
    {
        modalRef?.Hide();
    }

    private void EditItem(Order item)
    {
        // Console.WriteLine($"Редактируем элемент с ID: {item.Id}");
    }

    private async Task DeleteItem(Order item)
    {
        // var confirm = await JSRuntime.InvokeAsync<bool>("confirm", $"Вы уверены, что хотите удалить {item.Name}?");
        // if (confirm)
        // {
        //     testData.Remove(item);
        //     StateHasChanged();
        // }
    }
}